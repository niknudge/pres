{
  "name": "SemanticModel",
  "compatibilityLevel": 1400,
  "model": {
    "culture": "en-GB",
    "dataSources": [
      {
        "type": "structured",
        "name": "SQL/localhost,1344;OxfordHealthDW",
        "connectionDetails": {
          "protocol": "tds",
          "address": {
            "server": "localhost,1344",
            "database": "OxfordHealthDW"
          },
          "authentication": null,
          "query": null
        },
        "options": {},
        "credential": {
          "AuthenticationKind": "UsernamePassword",
          "Username": "sa",
          "EncryptConnection": false
        }
      }
    ],
    "tables": [
      {
        "name": "DimStaffGroup",
        "columns": [
          {
            "name": "StaffGroupPK",
            "dataType": "int64",
            "sourceColumn": "StaffGroupPK",
            "summarizeBy": "none"
          },
          {
            "name": "SourceSystemID",
            "dataType": "int64",
            "sourceColumn": "SourceSystemID"
          },
          {
            "name": "StaffGroupHash",
            "dataType": "int64",
            "sourceColumn": "StaffGroupHash"
          },
          {
            "name": "StaffGroupList",
            "dataType": "string",
            "sourceColumn": "StaffGroupList"
          },
          {
            "type": "calculated",
            "name": "Number Of Contacts",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": " LEN(DimStaffGroup[StaffGroupList])-LEN(SUBSTITUTE(DimStaffGroup[StaffGroupList],\"|\",\"\"))"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/localhost,1344;OxfordHealthDW\",",
                "    dbo_DimStaffGroup = Source{[Schema=\"dbo\",Item=\"DimStaffGroup\"]}[Data]",
                "in",
                "    dbo_DimStaffGroup"
              ]
            }
          }
        ]
      },
      {
        "name": "BridgeStaffGroupStaff",
        "columns": [
          {
            "name": "StaffFK",
            "dataType": "int64",
            "sourceColumn": "StaffFK"
          },
          {
            "name": "StaffGroupFK",
            "dataType": "int64",
            "sourceColumn": "StaffGroupFK"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/localhost,1344;OxfordHealthDW\",",
                "    dbo_BridgeStaffGroupStaff = Source{[Schema=\"dbo\",Item=\"BridgeStaffGroupStaff\"]}[Data]",
                "in",
                "    dbo_BridgeStaffGroupStaff"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "NumberOfTeamContacts",
            "expression": "COUNT(BridgeStaffGroupStaff[StaffGroupFK])"
          }
        ]
      },
      {
        "name": "FactAppointments",
        "columns": [
          {
            "name": "AutoID",
            "dataType": "int64",
            "sourceColumn": "AutoID"
          },
          {
            "name": "AppointmentFK",
            "dataType": "int64",
            "sourceColumn": "AppointmentFK"
          },
          {
            "name": "SourceAppointmentOrigin",
            "dataType": "string",
            "sourceColumn": "SourceAppointmentOrigin"
          },
          {
            "name": "EpisodeID",
            "dataType": "int64",
            "sourceColumn": "EpisodeID"
          },
          {
            "name": "MasterTeamFK",
            "dataType": "int64",
            "sourceColumn": "MasterTeamFK"
          },
          {
            "name": "AppointmentDateFK",
            "dataType": "int64",
            "sourceColumn": "AppointmentDateFK"
          },
          {
            "name": "_DischargeDateFK",
            "dataType": "int64",
            "sourceColumn": "_DischargeDateFK"
          },
          {
            "name": "ReferralReceivedDateFK",
            "dataType": "int64",
            "sourceColumn": "ReferralReceivedDateFK"
          },
          {
            "name": "PatientFK",
            "dataType": "int64",
            "sourceColumn": "PatientFK"
          },
          {
            "name": "StaffGroupFK",
            "dataType": "int64",
            "sourceColumn": "StaffGroupFK"
          },
          {
            "name": "AppointmentLengthMinutes",
            "dataType": "int64",
            "sourceColumn": "AppointmentLengthMinutes"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/localhost,1344;OxfordHealthDW\",",
                "    dbo_FactAppointments = Source{[Schema=\"dbo\",Item=\"FactAppointments\"]}[Data]",
                "in",
                "    dbo_FactAppointments"
              ]
            }
          }
        ]
      },
      {
        "name": "StaffParentChild",
        "columns": [
          {
            "name": "Hierarchy",
            "dataType": "string",
            "sourceColumn": "Hierarchy"
          },
          {
            "name": "ParentID",
            "dataType": "int64",
            "sourceColumn": "ParentID"
          },
          {
            "name": "ChildID",
            "dataType": "int64",
            "sourceColumn": "ChildID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/localhost,1344;OxfordHealthDW\",",
                "    dbo_StaffParentChild = Source{[Schema=\"dbo\",Item=\"StaffParentChild\"]}[Data]",
                "in",
                "    dbo_StaffParentChild"
              ]
            }
          }
        ]
      },
      {
        "name": "DimStaff",
        "columns": [
          {
            "name": "StaffID",
            "dataType": "int64",
            "sourceColumn": "StaffID"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/localhost,1344;OxfordHealthDW\",",
                "    dbo_DimStaff = Source{[Schema=\"dbo\",Item=\"DimStaff\"]}[Data]",
                "in",
                "    dbo_DimStaff"
              ]
            }
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "fc0b0870-7a8e-4771-87cd-f3d2546ac979",
        "fromTable": "FactAppointments",
        "fromColumn": "StaffGroupFK",
        "toTable": "DimStaffGroup",
        "toColumn": "StaffGroupPK",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "bc7dd8dd-ac16-4979-b99b-d0bbdca0a730",
        "fromTable": "BridgeStaffGroupStaff",
        "fromColumn": "StaffGroupFK",
        "toTable": "DimStaffGroup",
        "toColumn": "StaffGroupPK",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "2ae09f63-f35f-428a-9e0e-6b0301564a2c",
        "fromTable": "BridgeStaffGroupStaff",
        "fromColumn": "StaffFK",
        "toTable": "DimStaff",
        "toColumn": "StaffID",
        "crossFilteringBehavior": "bothDirections"
      },
      {
        "name": "e01c2f5b-5010-4360-9251-87adfdab1a14",
        "fromTable": "StaffParentChild",
        "fromColumn": "ChildID",
        "toTable": "DimStaff",
        "toColumn": "StaffID",
        "crossFilteringBehavior": "bothDirections"
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "500"
      }
    ]
  },
  "id": "SemanticModel"
}